
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
const __dirname = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums.js"
import * as $Class from "./internal/class.js"
import * as Prisma from "./internal/prismaNamespace.js"

export * as $Enums from './enums.js'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Assets
 * const assets = await prisma.asset.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "src/generated/prisma/query_engine-windows.dll.node")

/**
 * Model Asset
 * 
 */
export type Asset = Prisma.AssetModel
/**
 * Model TechnicalSpecification
 * 
 */
export type TechnicalSpecification = Prisma.TechnicalSpecificationModel
/**
 * Model Cost
 * 
 */
export type Cost = Prisma.CostModel
/**
 * Model AssetAccessory
 * 
 */
export type AssetAccessory = Prisma.AssetAccessoryModel
/**
 * Model ErrorCategory
 * 
 */
export type ErrorCategory = Prisma.ErrorCategoryModel
/**
 * Model Error
 * 
 */
export type Error = Prisma.ErrorModel
/**
 * Model AssetError
 * 
 */
export type AssetError = Prisma.AssetErrorModel
/**
 * Model Part
 * 
 */
export type Part = Prisma.PartModel
/**
 * Model AssetPart
 * 
 */
export type AssetPart = Prisma.AssetPartModel
/**
 * Model Transfer
 * 
 */
export type Transfer = Prisma.TransferModel
/**
 * Model AssetTransfer
 * 
 */
export type AssetTransfer = Prisma.AssetTransferModel
/**
 * Model Arrival
 * 
 */
export type Arrival = Prisma.ArrivalModel
/**
 * Model Departure
 * 
 */
export type Departure = Prisma.DepartureModel
/**
 * Model Hold
 * 
 */
export type Hold = Prisma.HoldModel
/**
 * Model Invoice
 * 
 */
export type Invoice = Prisma.InvoiceModel
/**
 * Model Warehouse
 * 
 */
export type Warehouse = Prisma.WarehouseModel
/**
 * Model Location
 * 
 */
export type Location = Prisma.LocationModel
/**
 * Model Brand
 * 
 */
export type Brand = Prisma.BrandModel
/**
 * Model Model
 * 
 */
export type Model = Prisma.ModelModel
/**
 * Model File
 * 
 */
export type File = Prisma.FileModel
/**
 * Model Comment
 * 
 */
export type Comment = Prisma.CommentModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Organization
 * 
 */
export type Organization = Prisma.OrganizationModel
/**
 * Model AssetHistory
 * 
 */
export type AssetHistory = Prisma.AssetHistoryModel

export type Accessory = $Enums.Accessory
export const Accessory = $Enums.Accessory

export type AssetType = $Enums.AssetType
export const AssetType = $Enums.AssetType

export type TrackingStatus = $Enums.TrackingStatus
export const TrackingStatus = $Enums.TrackingStatus

export type ExitStatus = $Enums.ExitStatus
export const ExitStatus = $Enums.ExitStatus

export type TechnicalStatus = $Enums.TechnicalStatus
export const TechnicalStatus = $Enums.TechnicalStatus

export type Role = $Enums.Role
export const Role = $Enums.Role

export type FileType = $Enums.FileType
export const FileType = $Enums.FileType

export type GeneralOperation = $Enums.GeneralOperation
export const GeneralOperation = $Enums.GeneralOperation

export type PartOperation = $Enums.PartOperation
export const PartOperation = $Enums.PartOperation

export type InvoiceType = $Enums.InvoiceType
export const InvoiceType = $Enums.InvoiceType

export type DataField = $Enums.DataField
export const DataField = $Enums.DataField
