
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Departure` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Departure
 * 
 */
export type DepartureModel = runtime.Types.Result.DefaultSelection<Prisma.$DeparturePayload>

export type AggregateDeparture = {
  _count: DepartureCountAggregateOutputType | null
  _avg: DepartureAvgAggregateOutputType | null
  _sum: DepartureSumAggregateOutputType | null
  _min: DepartureMinAggregateOutputType | null
  _max: DepartureMaxAggregateOutputType | null
}

export type DepartureAvgAggregateOutputType = {
  id: number | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  sales_representative_id: number | null
}

export type DepartureSumAggregateOutputType = {
  id: number | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  sales_representative_id: number | null
}

export type DepartureMinAggregateOutputType = {
  id: number | null
  departure_number: string | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  sales_representative_id: number | null
  notes: string | null
  created_at: Date | null
}

export type DepartureMaxAggregateOutputType = {
  id: number | null
  departure_number: string | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  sales_representative_id: number | null
  notes: string | null
  created_at: Date | null
}

export type DepartureCountAggregateOutputType = {
  id: number
  departure_number: number
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes: number
  created_at: number
  _all: number
}


export type DepartureAvgAggregateInputType = {
  id?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  sales_representative_id?: true
}

export type DepartureSumAggregateInputType = {
  id?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  sales_representative_id?: true
}

export type DepartureMinAggregateInputType = {
  id?: true
  departure_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  sales_representative_id?: true
  notes?: true
  created_at?: true
}

export type DepartureMaxAggregateInputType = {
  id?: true
  departure_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  sales_representative_id?: true
  notes?: true
  created_at?: true
}

export type DepartureCountAggregateInputType = {
  id?: true
  departure_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  sales_representative_id?: true
  notes?: true
  created_at?: true
  _all?: true
}

export type DepartureAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Departure to aggregate.
   */
  where?: Prisma.DepartureWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Departures to fetch.
   */
  orderBy?: Prisma.DepartureOrderByWithRelationInput | Prisma.DepartureOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.DepartureWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Departures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Departures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Departures
  **/
  _count?: true | DepartureCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: DepartureAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: DepartureSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: DepartureMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: DepartureMaxAggregateInputType
}

export type GetDepartureAggregateType<T extends DepartureAggregateArgs> = {
      [P in keyof T & keyof AggregateDeparture]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDeparture[P]>
    : Prisma.GetScalarType<T[P], AggregateDeparture[P]>
}




export type DepartureGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.DepartureWhereInput
  orderBy?: Prisma.DepartureOrderByWithAggregationInput | Prisma.DepartureOrderByWithAggregationInput[]
  by: Prisma.DepartureScalarFieldEnum[] | Prisma.DepartureScalarFieldEnum
  having?: Prisma.DepartureScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: DepartureCountAggregateInputType | true
  _avg?: DepartureAvgAggregateInputType
  _sum?: DepartureSumAggregateInputType
  _min?: DepartureMinAggregateInputType
  _max?: DepartureMaxAggregateInputType
}

export type DepartureGroupByOutputType = {
  id: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes: string | null
  created_at: Date
  _count: DepartureCountAggregateOutputType | null
  _avg: DepartureAvgAggregateOutputType | null
  _sum: DepartureSumAggregateOutputType | null
  _min: DepartureMinAggregateOutputType | null
  _max: DepartureMaxAggregateOutputType | null
}

type GetDepartureGroupByPayload<T extends DepartureGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DepartureGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof DepartureGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], DepartureGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], DepartureGroupByOutputType[P]>
      }
    >
  > 



export type DepartureWhereInput = {
  AND?: Prisma.DepartureWhereInput | Prisma.DepartureWhereInput[]
  OR?: Prisma.DepartureWhereInput[]
  NOT?: Prisma.DepartureWhereInput | Prisma.DepartureWhereInput[]
  id?: Prisma.IntFilter<"Departure"> | number
  departure_number?: Prisma.StringFilter<"Departure"> | string
  origin_id?: Prisma.IntFilter<"Departure"> | number
  destination_id?: Prisma.IntFilter<"Departure"> | number
  transporter_id?: Prisma.IntFilter<"Departure"> | number
  created_by_id?: Prisma.IntFilter<"Departure"> | number
  sales_representative_id?: Prisma.IntFilter<"Departure"> | number
  notes?: Prisma.StringNullableFilter<"Departure"> | string | null
  created_at?: Prisma.DateTimeFilter<"Departure"> | Date | string
  origin?: Prisma.XOR<Prisma.WarehouseScalarRelationFilter, Prisma.WarehouseWhereInput>
  destination?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  transporter?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  created_by?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  sales_representative?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  assets?: Prisma.AssetListRelationFilter
}

export type DepartureOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  departure_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  origin?: Prisma.WarehouseOrderByWithRelationInput
  destination?: Prisma.OrganizationOrderByWithRelationInput
  transporter?: Prisma.OrganizationOrderByWithRelationInput
  created_by?: Prisma.UserOrderByWithRelationInput
  sales_representative?: Prisma.UserOrderByWithRelationInput
  assets?: Prisma.AssetOrderByRelationAggregateInput
}

export type DepartureWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  departure_number?: string
  AND?: Prisma.DepartureWhereInput | Prisma.DepartureWhereInput[]
  OR?: Prisma.DepartureWhereInput[]
  NOT?: Prisma.DepartureWhereInput | Prisma.DepartureWhereInput[]
  origin_id?: Prisma.IntFilter<"Departure"> | number
  destination_id?: Prisma.IntFilter<"Departure"> | number
  transporter_id?: Prisma.IntFilter<"Departure"> | number
  created_by_id?: Prisma.IntFilter<"Departure"> | number
  sales_representative_id?: Prisma.IntFilter<"Departure"> | number
  notes?: Prisma.StringNullableFilter<"Departure"> | string | null
  created_at?: Prisma.DateTimeFilter<"Departure"> | Date | string
  origin?: Prisma.XOR<Prisma.WarehouseScalarRelationFilter, Prisma.WarehouseWhereInput>
  destination?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  transporter?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  created_by?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  sales_representative?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  assets?: Prisma.AssetListRelationFilter
}, "id" | "departure_number">

export type DepartureOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  departure_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  _count?: Prisma.DepartureCountOrderByAggregateInput
  _avg?: Prisma.DepartureAvgOrderByAggregateInput
  _max?: Prisma.DepartureMaxOrderByAggregateInput
  _min?: Prisma.DepartureMinOrderByAggregateInput
  _sum?: Prisma.DepartureSumOrderByAggregateInput
}

export type DepartureScalarWhereWithAggregatesInput = {
  AND?: Prisma.DepartureScalarWhereWithAggregatesInput | Prisma.DepartureScalarWhereWithAggregatesInput[]
  OR?: Prisma.DepartureScalarWhereWithAggregatesInput[]
  NOT?: Prisma.DepartureScalarWhereWithAggregatesInput | Prisma.DepartureScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  departure_number?: Prisma.StringWithAggregatesFilter<"Departure"> | string
  origin_id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  destination_id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  transporter_id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  created_by_id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  sales_representative_id?: Prisma.IntWithAggregatesFilter<"Departure"> | number
  notes?: Prisma.StringNullableWithAggregatesFilter<"Departure"> | string | null
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Departure"> | Date | string
}

export type DepartureCreateInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureUpdateInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureCreateManyInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureUpdateManyMutationInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureNullableScalarRelationFilter = {
  is?: Prisma.DepartureWhereInput | null
  isNot?: Prisma.DepartureWhereInput | null
}

export type DepartureCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  departure_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type DepartureAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
}

export type DepartureMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  departure_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type DepartureMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  departure_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type DepartureSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  sales_representative_id?: Prisma.SortOrder
}

export type DepartureListRelationFilter = {
  every?: Prisma.DepartureWhereInput
  some?: Prisma.DepartureWhereInput
  none?: Prisma.DepartureWhereInput
}

export type DepartureOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type DepartureCreateNestedOneWithoutAssetsInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutAssetsInput, Prisma.DepartureUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutAssetsInput
  connect?: Prisma.DepartureWhereUniqueInput
}

export type DepartureUpdateOneWithoutAssetsNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutAssetsInput, Prisma.DepartureUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutAssetsInput
  upsert?: Prisma.DepartureUpsertWithoutAssetsInput
  disconnect?: Prisma.DepartureWhereInput | boolean
  delete?: Prisma.DepartureWhereInput | boolean
  connect?: Prisma.DepartureWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.DepartureUpdateToOneWithWhereWithoutAssetsInput, Prisma.DepartureUpdateWithoutAssetsInput>, Prisma.DepartureUncheckedUpdateWithoutAssetsInput>
}

export type DepartureCreateNestedManyWithoutOriginInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput> | Prisma.DepartureCreateWithoutOriginInput[] | Prisma.DepartureUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutOriginInput | Prisma.DepartureCreateOrConnectWithoutOriginInput[]
  createMany?: Prisma.DepartureCreateManyOriginInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUncheckedCreateNestedManyWithoutOriginInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput> | Prisma.DepartureCreateWithoutOriginInput[] | Prisma.DepartureUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutOriginInput | Prisma.DepartureCreateOrConnectWithoutOriginInput[]
  createMany?: Prisma.DepartureCreateManyOriginInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUpdateManyWithoutOriginNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput> | Prisma.DepartureCreateWithoutOriginInput[] | Prisma.DepartureUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutOriginInput | Prisma.DepartureCreateOrConnectWithoutOriginInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutOriginInput | Prisma.DepartureUpsertWithWhereUniqueWithoutOriginInput[]
  createMany?: Prisma.DepartureCreateManyOriginInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutOriginInput | Prisma.DepartureUpdateWithWhereUniqueWithoutOriginInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutOriginInput | Prisma.DepartureUpdateManyWithWhereWithoutOriginInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUncheckedUpdateManyWithoutOriginNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput> | Prisma.DepartureCreateWithoutOriginInput[] | Prisma.DepartureUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutOriginInput | Prisma.DepartureCreateOrConnectWithoutOriginInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutOriginInput | Prisma.DepartureUpsertWithWhereUniqueWithoutOriginInput[]
  createMany?: Prisma.DepartureCreateManyOriginInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutOriginInput | Prisma.DepartureUpdateWithWhereUniqueWithoutOriginInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutOriginInput | Prisma.DepartureUpdateManyWithWhereWithoutOriginInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureCreateNestedManyWithoutCreated_byInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput> | Prisma.DepartureCreateWithoutCreated_byInput[] | Prisma.DepartureUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutCreated_byInput | Prisma.DepartureCreateOrConnectWithoutCreated_byInput[]
  createMany?: Prisma.DepartureCreateManyCreated_byInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureCreateNestedManyWithoutSales_representativeInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput> | Prisma.DepartureCreateWithoutSales_representativeInput[] | Prisma.DepartureUncheckedCreateWithoutSales_representativeInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutSales_representativeInput | Prisma.DepartureCreateOrConnectWithoutSales_representativeInput[]
  createMany?: Prisma.DepartureCreateManySales_representativeInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUncheckedCreateNestedManyWithoutCreated_byInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput> | Prisma.DepartureCreateWithoutCreated_byInput[] | Prisma.DepartureUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutCreated_byInput | Prisma.DepartureCreateOrConnectWithoutCreated_byInput[]
  createMany?: Prisma.DepartureCreateManyCreated_byInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUncheckedCreateNestedManyWithoutSales_representativeInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput> | Prisma.DepartureCreateWithoutSales_representativeInput[] | Prisma.DepartureUncheckedCreateWithoutSales_representativeInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutSales_representativeInput | Prisma.DepartureCreateOrConnectWithoutSales_representativeInput[]
  createMany?: Prisma.DepartureCreateManySales_representativeInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUpdateManyWithoutCreated_byNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput> | Prisma.DepartureCreateWithoutCreated_byInput[] | Prisma.DepartureUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutCreated_byInput | Prisma.DepartureCreateOrConnectWithoutCreated_byInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutCreated_byInput | Prisma.DepartureUpsertWithWhereUniqueWithoutCreated_byInput[]
  createMany?: Prisma.DepartureCreateManyCreated_byInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutCreated_byInput | Prisma.DepartureUpdateWithWhereUniqueWithoutCreated_byInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutCreated_byInput | Prisma.DepartureUpdateManyWithWhereWithoutCreated_byInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUpdateManyWithoutSales_representativeNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput> | Prisma.DepartureCreateWithoutSales_representativeInput[] | Prisma.DepartureUncheckedCreateWithoutSales_representativeInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutSales_representativeInput | Prisma.DepartureCreateOrConnectWithoutSales_representativeInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutSales_representativeInput | Prisma.DepartureUpsertWithWhereUniqueWithoutSales_representativeInput[]
  createMany?: Prisma.DepartureCreateManySales_representativeInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutSales_representativeInput | Prisma.DepartureUpdateWithWhereUniqueWithoutSales_representativeInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutSales_representativeInput | Prisma.DepartureUpdateManyWithWhereWithoutSales_representativeInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUncheckedUpdateManyWithoutCreated_byNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput> | Prisma.DepartureCreateWithoutCreated_byInput[] | Prisma.DepartureUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutCreated_byInput | Prisma.DepartureCreateOrConnectWithoutCreated_byInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutCreated_byInput | Prisma.DepartureUpsertWithWhereUniqueWithoutCreated_byInput[]
  createMany?: Prisma.DepartureCreateManyCreated_byInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutCreated_byInput | Prisma.DepartureUpdateWithWhereUniqueWithoutCreated_byInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutCreated_byInput | Prisma.DepartureUpdateManyWithWhereWithoutCreated_byInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUncheckedUpdateManyWithoutSales_representativeNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput> | Prisma.DepartureCreateWithoutSales_representativeInput[] | Prisma.DepartureUncheckedCreateWithoutSales_representativeInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutSales_representativeInput | Prisma.DepartureCreateOrConnectWithoutSales_representativeInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutSales_representativeInput | Prisma.DepartureUpsertWithWhereUniqueWithoutSales_representativeInput[]
  createMany?: Prisma.DepartureCreateManySales_representativeInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutSales_representativeInput | Prisma.DepartureUpdateWithWhereUniqueWithoutSales_representativeInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutSales_representativeInput | Prisma.DepartureUpdateManyWithWhereWithoutSales_representativeInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureCreateNestedManyWithoutDestinationInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput> | Prisma.DepartureCreateWithoutDestinationInput[] | Prisma.DepartureUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutDestinationInput | Prisma.DepartureCreateOrConnectWithoutDestinationInput[]
  createMany?: Prisma.DepartureCreateManyDestinationInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureCreateNestedManyWithoutTransporterInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput> | Prisma.DepartureCreateWithoutTransporterInput[] | Prisma.DepartureUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutTransporterInput | Prisma.DepartureCreateOrConnectWithoutTransporterInput[]
  createMany?: Prisma.DepartureCreateManyTransporterInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUncheckedCreateNestedManyWithoutDestinationInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput> | Prisma.DepartureCreateWithoutDestinationInput[] | Prisma.DepartureUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutDestinationInput | Prisma.DepartureCreateOrConnectWithoutDestinationInput[]
  createMany?: Prisma.DepartureCreateManyDestinationInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUncheckedCreateNestedManyWithoutTransporterInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput> | Prisma.DepartureCreateWithoutTransporterInput[] | Prisma.DepartureUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutTransporterInput | Prisma.DepartureCreateOrConnectWithoutTransporterInput[]
  createMany?: Prisma.DepartureCreateManyTransporterInputEnvelope
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
}

export type DepartureUpdateManyWithoutDestinationNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput> | Prisma.DepartureCreateWithoutDestinationInput[] | Prisma.DepartureUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutDestinationInput | Prisma.DepartureCreateOrConnectWithoutDestinationInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutDestinationInput | Prisma.DepartureUpsertWithWhereUniqueWithoutDestinationInput[]
  createMany?: Prisma.DepartureCreateManyDestinationInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutDestinationInput | Prisma.DepartureUpdateWithWhereUniqueWithoutDestinationInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutDestinationInput | Prisma.DepartureUpdateManyWithWhereWithoutDestinationInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUpdateManyWithoutTransporterNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput> | Prisma.DepartureCreateWithoutTransporterInput[] | Prisma.DepartureUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutTransporterInput | Prisma.DepartureCreateOrConnectWithoutTransporterInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutTransporterInput | Prisma.DepartureUpsertWithWhereUniqueWithoutTransporterInput[]
  createMany?: Prisma.DepartureCreateManyTransporterInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutTransporterInput | Prisma.DepartureUpdateWithWhereUniqueWithoutTransporterInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutTransporterInput | Prisma.DepartureUpdateManyWithWhereWithoutTransporterInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUncheckedUpdateManyWithoutDestinationNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput> | Prisma.DepartureCreateWithoutDestinationInput[] | Prisma.DepartureUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutDestinationInput | Prisma.DepartureCreateOrConnectWithoutDestinationInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutDestinationInput | Prisma.DepartureUpsertWithWhereUniqueWithoutDestinationInput[]
  createMany?: Prisma.DepartureCreateManyDestinationInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutDestinationInput | Prisma.DepartureUpdateWithWhereUniqueWithoutDestinationInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutDestinationInput | Prisma.DepartureUpdateManyWithWhereWithoutDestinationInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureUncheckedUpdateManyWithoutTransporterNestedInput = {
  create?: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput> | Prisma.DepartureCreateWithoutTransporterInput[] | Prisma.DepartureUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.DepartureCreateOrConnectWithoutTransporterInput | Prisma.DepartureCreateOrConnectWithoutTransporterInput[]
  upsert?: Prisma.DepartureUpsertWithWhereUniqueWithoutTransporterInput | Prisma.DepartureUpsertWithWhereUniqueWithoutTransporterInput[]
  createMany?: Prisma.DepartureCreateManyTransporterInputEnvelope
  set?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  disconnect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  delete?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  connect?: Prisma.DepartureWhereUniqueInput | Prisma.DepartureWhereUniqueInput[]
  update?: Prisma.DepartureUpdateWithWhereUniqueWithoutTransporterInput | Prisma.DepartureUpdateWithWhereUniqueWithoutTransporterInput[]
  updateMany?: Prisma.DepartureUpdateManyWithWhereWithoutTransporterInput | Prisma.DepartureUpdateManyWithWhereWithoutTransporterInput[]
  deleteMany?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
}

export type DepartureCreateWithoutAssetsInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
}

export type DepartureUncheckedCreateWithoutAssetsInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureCreateOrConnectWithoutAssetsInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutAssetsInput, Prisma.DepartureUncheckedCreateWithoutAssetsInput>
}

export type DepartureUpsertWithoutAssetsInput = {
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutAssetsInput, Prisma.DepartureUncheckedUpdateWithoutAssetsInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutAssetsInput, Prisma.DepartureUncheckedCreateWithoutAssetsInput>
  where?: Prisma.DepartureWhereInput
}

export type DepartureUpdateToOneWithWhereWithoutAssetsInput = {
  where?: Prisma.DepartureWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutAssetsInput, Prisma.DepartureUncheckedUpdateWithoutAssetsInput>
}

export type DepartureUpdateWithoutAssetsInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
}

export type DepartureUncheckedUpdateWithoutAssetsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureCreateWithoutOriginInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateWithoutOriginInput = {
  id?: number
  departure_number: string
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureCreateOrConnectWithoutOriginInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput>
}

export type DepartureCreateManyOriginInputEnvelope = {
  data: Prisma.DepartureCreateManyOriginInput | Prisma.DepartureCreateManyOriginInput[]
  skipDuplicates?: boolean
}

export type DepartureUpsertWithWhereUniqueWithoutOriginInput = {
  where: Prisma.DepartureWhereUniqueInput
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutOriginInput, Prisma.DepartureUncheckedUpdateWithoutOriginInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutOriginInput, Prisma.DepartureUncheckedCreateWithoutOriginInput>
}

export type DepartureUpdateWithWhereUniqueWithoutOriginInput = {
  where: Prisma.DepartureWhereUniqueInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutOriginInput, Prisma.DepartureUncheckedUpdateWithoutOriginInput>
}

export type DepartureUpdateManyWithWhereWithoutOriginInput = {
  where: Prisma.DepartureScalarWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyWithoutOriginInput>
}

export type DepartureScalarWhereInput = {
  AND?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
  OR?: Prisma.DepartureScalarWhereInput[]
  NOT?: Prisma.DepartureScalarWhereInput | Prisma.DepartureScalarWhereInput[]
  id?: Prisma.IntFilter<"Departure"> | number
  departure_number?: Prisma.StringFilter<"Departure"> | string
  origin_id?: Prisma.IntFilter<"Departure"> | number
  destination_id?: Prisma.IntFilter<"Departure"> | number
  transporter_id?: Prisma.IntFilter<"Departure"> | number
  created_by_id?: Prisma.IntFilter<"Departure"> | number
  sales_representative_id?: Prisma.IntFilter<"Departure"> | number
  notes?: Prisma.StringNullableFilter<"Departure"> | string | null
  created_at?: Prisma.DateTimeFilter<"Departure"> | Date | string
}

export type DepartureCreateWithoutCreated_byInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateWithoutCreated_byInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureCreateOrConnectWithoutCreated_byInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput>
}

export type DepartureCreateManyCreated_byInputEnvelope = {
  data: Prisma.DepartureCreateManyCreated_byInput | Prisma.DepartureCreateManyCreated_byInput[]
  skipDuplicates?: boolean
}

export type DepartureCreateWithoutSales_representativeInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateWithoutSales_representativeInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureCreateOrConnectWithoutSales_representativeInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput>
}

export type DepartureCreateManySales_representativeInputEnvelope = {
  data: Prisma.DepartureCreateManySales_representativeInput | Prisma.DepartureCreateManySales_representativeInput[]
  skipDuplicates?: boolean
}

export type DepartureUpsertWithWhereUniqueWithoutCreated_byInput = {
  where: Prisma.DepartureWhereUniqueInput
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutCreated_byInput, Prisma.DepartureUncheckedUpdateWithoutCreated_byInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutCreated_byInput, Prisma.DepartureUncheckedCreateWithoutCreated_byInput>
}

export type DepartureUpdateWithWhereUniqueWithoutCreated_byInput = {
  where: Prisma.DepartureWhereUniqueInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutCreated_byInput, Prisma.DepartureUncheckedUpdateWithoutCreated_byInput>
}

export type DepartureUpdateManyWithWhereWithoutCreated_byInput = {
  where: Prisma.DepartureScalarWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyWithoutCreated_byInput>
}

export type DepartureUpsertWithWhereUniqueWithoutSales_representativeInput = {
  where: Prisma.DepartureWhereUniqueInput
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutSales_representativeInput, Prisma.DepartureUncheckedUpdateWithoutSales_representativeInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutSales_representativeInput, Prisma.DepartureUncheckedCreateWithoutSales_representativeInput>
}

export type DepartureUpdateWithWhereUniqueWithoutSales_representativeInput = {
  where: Prisma.DepartureWhereUniqueInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutSales_representativeInput, Prisma.DepartureUncheckedUpdateWithoutSales_representativeInput>
}

export type DepartureUpdateManyWithWhereWithoutSales_representativeInput = {
  where: Prisma.DepartureScalarWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyWithoutSales_representativeInput>
}

export type DepartureCreateWithoutDestinationInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutDepartures_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateWithoutDestinationInput = {
  id?: number
  departure_number: string
  origin_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureCreateOrConnectWithoutDestinationInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput>
}

export type DepartureCreateManyDestinationInputEnvelope = {
  data: Prisma.DepartureCreateManyDestinationInput | Prisma.DepartureCreateManyDestinationInput[]
  skipDuplicates?: boolean
}

export type DepartureCreateWithoutTransporterInput = {
  departure_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.WarehouseCreateNestedOneWithoutDeparturesInput
  destination: Prisma.OrganizationCreateNestedOneWithoutDepartures_destinationInput
  created_by: Prisma.UserCreateNestedOneWithoutDeparturesInput
  sales_representative: Prisma.UserCreateNestedOneWithoutDeparture_sales_repsInput
  assets?: Prisma.AssetCreateNestedManyWithoutDepartureInput
}

export type DepartureUncheckedCreateWithoutTransporterInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutDepartureInput
}

export type DepartureCreateOrConnectWithoutTransporterInput = {
  where: Prisma.DepartureWhereUniqueInput
  create: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput>
}

export type DepartureCreateManyTransporterInputEnvelope = {
  data: Prisma.DepartureCreateManyTransporterInput | Prisma.DepartureCreateManyTransporterInput[]
  skipDuplicates?: boolean
}

export type DepartureUpsertWithWhereUniqueWithoutDestinationInput = {
  where: Prisma.DepartureWhereUniqueInput
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutDestinationInput, Prisma.DepartureUncheckedUpdateWithoutDestinationInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutDestinationInput, Prisma.DepartureUncheckedCreateWithoutDestinationInput>
}

export type DepartureUpdateWithWhereUniqueWithoutDestinationInput = {
  where: Prisma.DepartureWhereUniqueInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutDestinationInput, Prisma.DepartureUncheckedUpdateWithoutDestinationInput>
}

export type DepartureUpdateManyWithWhereWithoutDestinationInput = {
  where: Prisma.DepartureScalarWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyWithoutDestinationInput>
}

export type DepartureUpsertWithWhereUniqueWithoutTransporterInput = {
  where: Prisma.DepartureWhereUniqueInput
  update: Prisma.XOR<Prisma.DepartureUpdateWithoutTransporterInput, Prisma.DepartureUncheckedUpdateWithoutTransporterInput>
  create: Prisma.XOR<Prisma.DepartureCreateWithoutTransporterInput, Prisma.DepartureUncheckedCreateWithoutTransporterInput>
}

export type DepartureUpdateWithWhereUniqueWithoutTransporterInput = {
  where: Prisma.DepartureWhereUniqueInput
  data: Prisma.XOR<Prisma.DepartureUpdateWithoutTransporterInput, Prisma.DepartureUncheckedUpdateWithoutTransporterInput>
}

export type DepartureUpdateManyWithWhereWithoutTransporterInput = {
  where: Prisma.DepartureScalarWhereInput
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyWithoutTransporterInput>
}

export type DepartureCreateManyOriginInput = {
  id?: number
  departure_number: string
  destination_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureUpdateWithoutOriginInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateWithoutOriginInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateManyWithoutOriginInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureCreateManyCreated_byInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureCreateManySales_representativeInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureUpdateWithoutCreated_byInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateWithoutCreated_byInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateManyWithoutCreated_byInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureUpdateWithoutSales_representativeInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateWithoutSales_representativeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateManyWithoutSales_representativeInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureCreateManyDestinationInput = {
  id?: number
  departure_number: string
  origin_id: number
  transporter_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureCreateManyTransporterInput = {
  id?: number
  departure_number: string
  origin_id: number
  destination_id: number
  created_by_id: number
  sales_representative_id: number
  notes?: string | null
  created_at: Date | string
}

export type DepartureUpdateWithoutDestinationInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateWithoutDestinationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateManyWithoutDestinationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type DepartureUpdateWithoutTransporterInput = {
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.WarehouseUpdateOneRequiredWithoutDeparturesNestedInput
  destination?: Prisma.OrganizationUpdateOneRequiredWithoutDepartures_destinationNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutDeparturesNestedInput
  sales_representative?: Prisma.UserUpdateOneRequiredWithoutDeparture_sales_repsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateWithoutTransporterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutDepartureNestedInput
}

export type DepartureUncheckedUpdateManyWithoutTransporterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  departure_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  sales_representative_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type DepartureCountOutputType
 */

export type DepartureCountOutputType = {
  assets: number
}

export type DepartureCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  assets?: boolean | DepartureCountOutputTypeCountAssetsArgs
}

/**
 * DepartureCountOutputType without action
 */
export type DepartureCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the DepartureCountOutputType
   */
  select?: Prisma.DepartureCountOutputTypeSelect<ExtArgs> | null
}

/**
 * DepartureCountOutputType without action
 */
export type DepartureCountOutputTypeCountAssetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AssetWhereInput
}


export type DepartureSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  departure_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  sales_representative_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  assets?: boolean | Prisma.Departure$assetsArgs<ExtArgs>
  _count?: boolean | Prisma.DepartureCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["departure"]>

export type DepartureSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  departure_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  sales_representative_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["departure"]>

export type DepartureSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  departure_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  sales_representative_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["departure"]>

export type DepartureSelectScalar = {
  id?: boolean
  departure_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  sales_representative_id?: boolean
  notes?: boolean
  created_at?: boolean
}

export type DepartureOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "departure_number" | "origin_id" | "destination_id" | "transporter_id" | "created_by_id" | "sales_representative_id" | "notes" | "created_at", ExtArgs["result"]["departure"]>
export type DepartureInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  assets?: boolean | Prisma.Departure$assetsArgs<ExtArgs>
  _count?: boolean | Prisma.DepartureCountOutputTypeDefaultArgs<ExtArgs>
}
export type DepartureIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type DepartureIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  sales_representative?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $DeparturePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Departure"
  objects: {
    origin: Prisma.$WarehousePayload<ExtArgs>
    destination: Prisma.$OrganizationPayload<ExtArgs>
    transporter: Prisma.$OrganizationPayload<ExtArgs>
    created_by: Prisma.$UserPayload<ExtArgs>
    sales_representative: Prisma.$UserPayload<ExtArgs>
    assets: Prisma.$AssetPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    departure_number: string
    origin_id: number
    destination_id: number
    transporter_id: number
    created_by_id: number
    sales_representative_id: number
    notes: string | null
    created_at: Date
  }, ExtArgs["result"]["departure"]>
  composites: {}
}

export type DepartureGetPayload<S extends boolean | null | undefined | DepartureDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$DeparturePayload, S>

export type DepartureCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<DepartureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: DepartureCountAggregateInputType | true
  }

export interface DepartureDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Departure'], meta: { name: 'Departure' } }
  /**
   * Find zero or one Departure that matches the filter.
   * @param {DepartureFindUniqueArgs} args - Arguments to find a Departure
   * @example
   * // Get one Departure
   * const departure = await prisma.departure.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends DepartureFindUniqueArgs>(args: Prisma.SelectSubset<T, DepartureFindUniqueArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Departure that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {DepartureFindUniqueOrThrowArgs} args - Arguments to find a Departure
   * @example
   * // Get one Departure
   * const departure = await prisma.departure.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends DepartureFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, DepartureFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Departure that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureFindFirstArgs} args - Arguments to find a Departure
   * @example
   * // Get one Departure
   * const departure = await prisma.departure.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends DepartureFindFirstArgs>(args?: Prisma.SelectSubset<T, DepartureFindFirstArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Departure that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureFindFirstOrThrowArgs} args - Arguments to find a Departure
   * @example
   * // Get one Departure
   * const departure = await prisma.departure.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends DepartureFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, DepartureFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Departures that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Departures
   * const departures = await prisma.departure.findMany()
   * 
   * // Get first 10 Departures
   * const departures = await prisma.departure.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const departureWithIdOnly = await prisma.departure.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends DepartureFindManyArgs>(args?: Prisma.SelectSubset<T, DepartureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Departure.
   * @param {DepartureCreateArgs} args - Arguments to create a Departure.
   * @example
   * // Create one Departure
   * const Departure = await prisma.departure.create({
   *   data: {
   *     // ... data to create a Departure
   *   }
   * })
   * 
   */
  create<T extends DepartureCreateArgs>(args: Prisma.SelectSubset<T, DepartureCreateArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Departures.
   * @param {DepartureCreateManyArgs} args - Arguments to create many Departures.
   * @example
   * // Create many Departures
   * const departure = await prisma.departure.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends DepartureCreateManyArgs>(args?: Prisma.SelectSubset<T, DepartureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Departures and returns the data saved in the database.
   * @param {DepartureCreateManyAndReturnArgs} args - Arguments to create many Departures.
   * @example
   * // Create many Departures
   * const departure = await prisma.departure.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Departures and only return the `id`
   * const departureWithIdOnly = await prisma.departure.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends DepartureCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, DepartureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Departure.
   * @param {DepartureDeleteArgs} args - Arguments to delete one Departure.
   * @example
   * // Delete one Departure
   * const Departure = await prisma.departure.delete({
   *   where: {
   *     // ... filter to delete one Departure
   *   }
   * })
   * 
   */
  delete<T extends DepartureDeleteArgs>(args: Prisma.SelectSubset<T, DepartureDeleteArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Departure.
   * @param {DepartureUpdateArgs} args - Arguments to update one Departure.
   * @example
   * // Update one Departure
   * const departure = await prisma.departure.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends DepartureUpdateArgs>(args: Prisma.SelectSubset<T, DepartureUpdateArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Departures.
   * @param {DepartureDeleteManyArgs} args - Arguments to filter Departures to delete.
   * @example
   * // Delete a few Departures
   * const { count } = await prisma.departure.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends DepartureDeleteManyArgs>(args?: Prisma.SelectSubset<T, DepartureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Departures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Departures
   * const departure = await prisma.departure.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends DepartureUpdateManyArgs>(args: Prisma.SelectSubset<T, DepartureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Departures and returns the data updated in the database.
   * @param {DepartureUpdateManyAndReturnArgs} args - Arguments to update many Departures.
   * @example
   * // Update many Departures
   * const departure = await prisma.departure.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Departures and only return the `id`
   * const departureWithIdOnly = await prisma.departure.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends DepartureUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, DepartureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Departure.
   * @param {DepartureUpsertArgs} args - Arguments to update or create a Departure.
   * @example
   * // Update or create a Departure
   * const departure = await prisma.departure.upsert({
   *   create: {
   *     // ... data to create a Departure
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Departure we want to update
   *   }
   * })
   */
  upsert<T extends DepartureUpsertArgs>(args: Prisma.SelectSubset<T, DepartureUpsertArgs<ExtArgs>>): Prisma.Prisma__DepartureClient<runtime.Types.Result.GetResult<Prisma.$DeparturePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Departures.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureCountArgs} args - Arguments to filter Departures to count.
   * @example
   * // Count the number of Departures
   * const count = await prisma.departure.count({
   *   where: {
   *     // ... the filter for the Departures we want to count
   *   }
   * })
  **/
  count<T extends DepartureCountArgs>(
    args?: Prisma.Subset<T, DepartureCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], DepartureCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Departure.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends DepartureAggregateArgs>(args: Prisma.Subset<T, DepartureAggregateArgs>): Prisma.PrismaPromise<GetDepartureAggregateType<T>>

  /**
   * Group by Departure.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DepartureGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends DepartureGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: DepartureGroupByArgs['orderBy'] }
      : { orderBy?: DepartureGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, DepartureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Departure model
 */
readonly fields: DepartureFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Departure.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__DepartureClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  origin<T extends Prisma.WarehouseDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WarehouseDefaultArgs<ExtArgs>>): Prisma.Prisma__WarehouseClient<runtime.Types.Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  destination<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  transporter<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  created_by<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  sales_representative<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  assets<T extends Prisma.Departure$assetsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Departure$assetsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Departure model
 */
export interface DepartureFieldRefs {
  readonly id: Prisma.FieldRef<"Departure", 'Int'>
  readonly departure_number: Prisma.FieldRef<"Departure", 'String'>
  readonly origin_id: Prisma.FieldRef<"Departure", 'Int'>
  readonly destination_id: Prisma.FieldRef<"Departure", 'Int'>
  readonly transporter_id: Prisma.FieldRef<"Departure", 'Int'>
  readonly created_by_id: Prisma.FieldRef<"Departure", 'Int'>
  readonly sales_representative_id: Prisma.FieldRef<"Departure", 'Int'>
  readonly notes: Prisma.FieldRef<"Departure", 'String'>
  readonly created_at: Prisma.FieldRef<"Departure", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Departure findUnique
 */
export type DepartureFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter, which Departure to fetch.
   */
  where: Prisma.DepartureWhereUniqueInput
}

/**
 * Departure findUniqueOrThrow
 */
export type DepartureFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter, which Departure to fetch.
   */
  where: Prisma.DepartureWhereUniqueInput
}

/**
 * Departure findFirst
 */
export type DepartureFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter, which Departure to fetch.
   */
  where?: Prisma.DepartureWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Departures to fetch.
   */
  orderBy?: Prisma.DepartureOrderByWithRelationInput | Prisma.DepartureOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Departures.
   */
  cursor?: Prisma.DepartureWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Departures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Departures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Departures.
   */
  distinct?: Prisma.DepartureScalarFieldEnum | Prisma.DepartureScalarFieldEnum[]
}

/**
 * Departure findFirstOrThrow
 */
export type DepartureFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter, which Departure to fetch.
   */
  where?: Prisma.DepartureWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Departures to fetch.
   */
  orderBy?: Prisma.DepartureOrderByWithRelationInput | Prisma.DepartureOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Departures.
   */
  cursor?: Prisma.DepartureWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Departures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Departures.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Departures.
   */
  distinct?: Prisma.DepartureScalarFieldEnum | Prisma.DepartureScalarFieldEnum[]
}

/**
 * Departure findMany
 */
export type DepartureFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter, which Departures to fetch.
   */
  where?: Prisma.DepartureWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Departures to fetch.
   */
  orderBy?: Prisma.DepartureOrderByWithRelationInput | Prisma.DepartureOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Departures.
   */
  cursor?: Prisma.DepartureWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Departures from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Departures.
   */
  skip?: number
  distinct?: Prisma.DepartureScalarFieldEnum | Prisma.DepartureScalarFieldEnum[]
}

/**
 * Departure create
 */
export type DepartureCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * The data needed to create a Departure.
   */
  data: Prisma.XOR<Prisma.DepartureCreateInput, Prisma.DepartureUncheckedCreateInput>
}

/**
 * Departure createMany
 */
export type DepartureCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Departures.
   */
  data: Prisma.DepartureCreateManyInput | Prisma.DepartureCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Departure createManyAndReturn
 */
export type DepartureCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * The data used to create many Departures.
   */
  data: Prisma.DepartureCreateManyInput | Prisma.DepartureCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Departure update
 */
export type DepartureUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * The data needed to update a Departure.
   */
  data: Prisma.XOR<Prisma.DepartureUpdateInput, Prisma.DepartureUncheckedUpdateInput>
  /**
   * Choose, which Departure to update.
   */
  where: Prisma.DepartureWhereUniqueInput
}

/**
 * Departure updateMany
 */
export type DepartureUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Departures.
   */
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyInput>
  /**
   * Filter which Departures to update
   */
  where?: Prisma.DepartureWhereInput
  /**
   * Limit how many Departures to update.
   */
  limit?: number
}

/**
 * Departure updateManyAndReturn
 */
export type DepartureUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * The data used to update Departures.
   */
  data: Prisma.XOR<Prisma.DepartureUpdateManyMutationInput, Prisma.DepartureUncheckedUpdateManyInput>
  /**
   * Filter which Departures to update
   */
  where?: Prisma.DepartureWhereInput
  /**
   * Limit how many Departures to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Departure upsert
 */
export type DepartureUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * The filter to search for the Departure to update in case it exists.
   */
  where: Prisma.DepartureWhereUniqueInput
  /**
   * In case the Departure found by the `where` argument doesn't exist, create a new Departure with this data.
   */
  create: Prisma.XOR<Prisma.DepartureCreateInput, Prisma.DepartureUncheckedCreateInput>
  /**
   * In case the Departure was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.DepartureUpdateInput, Prisma.DepartureUncheckedUpdateInput>
}

/**
 * Departure delete
 */
export type DepartureDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
  /**
   * Filter which Departure to delete.
   */
  where: Prisma.DepartureWhereUniqueInput
}

/**
 * Departure deleteMany
 */
export type DepartureDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Departures to delete
   */
  where?: Prisma.DepartureWhereInput
  /**
   * Limit how many Departures to delete.
   */
  limit?: number
}

/**
 * Departure.assets
 */
export type Departure$assetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Asset
   */
  select?: Prisma.AssetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Asset
   */
  omit?: Prisma.AssetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssetInclude<ExtArgs> | null
  where?: Prisma.AssetWhereInput
  orderBy?: Prisma.AssetOrderByWithRelationInput | Prisma.AssetOrderByWithRelationInput[]
  cursor?: Prisma.AssetWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AssetScalarFieldEnum | Prisma.AssetScalarFieldEnum[]
}

/**
 * Departure without action
 */
export type DepartureDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Departure
   */
  select?: Prisma.DepartureSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Departure
   */
  omit?: Prisma.DepartureOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DepartureInclude<ExtArgs> | null
}
