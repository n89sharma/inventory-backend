
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Arrival` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Arrival
 * 
 */
export type ArrivalModel = runtime.Types.Result.DefaultSelection<Prisma.$ArrivalPayload>

export type AggregateArrival = {
  _count: ArrivalCountAggregateOutputType | null
  _avg: ArrivalAvgAggregateOutputType | null
  _sum: ArrivalSumAggregateOutputType | null
  _min: ArrivalMinAggregateOutputType | null
  _max: ArrivalMaxAggregateOutputType | null
}

export type ArrivalAvgAggregateOutputType = {
  id: number | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
}

export type ArrivalSumAggregateOutputType = {
  id: number | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
}

export type ArrivalMinAggregateOutputType = {
  id: number | null
  arrival_number: string | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  notes: string | null
  created_at: Date | null
}

export type ArrivalMaxAggregateOutputType = {
  id: number | null
  arrival_number: string | null
  origin_id: number | null
  destination_id: number | null
  transporter_id: number | null
  created_by_id: number | null
  notes: string | null
  created_at: Date | null
}

export type ArrivalCountAggregateOutputType = {
  id: number
  arrival_number: number
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes: number
  created_at: number
  _all: number
}


export type ArrivalAvgAggregateInputType = {
  id?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
}

export type ArrivalSumAggregateInputType = {
  id?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
}

export type ArrivalMinAggregateInputType = {
  id?: true
  arrival_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  notes?: true
  created_at?: true
}

export type ArrivalMaxAggregateInputType = {
  id?: true
  arrival_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  notes?: true
  created_at?: true
}

export type ArrivalCountAggregateInputType = {
  id?: true
  arrival_number?: true
  origin_id?: true
  destination_id?: true
  transporter_id?: true
  created_by_id?: true
  notes?: true
  created_at?: true
  _all?: true
}

export type ArrivalAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Arrival to aggregate.
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Arrivals to fetch.
   */
  orderBy?: Prisma.ArrivalOrderByWithRelationInput | Prisma.ArrivalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ArrivalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Arrivals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Arrivals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Arrivals
  **/
  _count?: true | ArrivalCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ArrivalAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ArrivalSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ArrivalMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ArrivalMaxAggregateInputType
}

export type GetArrivalAggregateType<T extends ArrivalAggregateArgs> = {
      [P in keyof T & keyof AggregateArrival]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateArrival[P]>
    : Prisma.GetScalarType<T[P], AggregateArrival[P]>
}




export type ArrivalGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArrivalWhereInput
  orderBy?: Prisma.ArrivalOrderByWithAggregationInput | Prisma.ArrivalOrderByWithAggregationInput[]
  by: Prisma.ArrivalScalarFieldEnum[] | Prisma.ArrivalScalarFieldEnum
  having?: Prisma.ArrivalScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ArrivalCountAggregateInputType | true
  _avg?: ArrivalAvgAggregateInputType
  _sum?: ArrivalSumAggregateInputType
  _min?: ArrivalMinAggregateInputType
  _max?: ArrivalMaxAggregateInputType
}

export type ArrivalGroupByOutputType = {
  id: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes: string | null
  created_at: Date
  _count: ArrivalCountAggregateOutputType | null
  _avg: ArrivalAvgAggregateOutputType | null
  _sum: ArrivalSumAggregateOutputType | null
  _min: ArrivalMinAggregateOutputType | null
  _max: ArrivalMaxAggregateOutputType | null
}

type GetArrivalGroupByPayload<T extends ArrivalGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ArrivalGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ArrivalGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ArrivalGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ArrivalGroupByOutputType[P]>
      }
    >
  > 



export type ArrivalWhereInput = {
  AND?: Prisma.ArrivalWhereInput | Prisma.ArrivalWhereInput[]
  OR?: Prisma.ArrivalWhereInput[]
  NOT?: Prisma.ArrivalWhereInput | Prisma.ArrivalWhereInput[]
  id?: Prisma.IntFilter<"Arrival"> | number
  arrival_number?: Prisma.StringFilter<"Arrival"> | string
  origin_id?: Prisma.IntFilter<"Arrival"> | number
  destination_id?: Prisma.IntFilter<"Arrival"> | number
  transporter_id?: Prisma.IntFilter<"Arrival"> | number
  created_by_id?: Prisma.IntFilter<"Arrival"> | number
  notes?: Prisma.StringNullableFilter<"Arrival"> | string | null
  created_at?: Prisma.DateTimeFilter<"Arrival"> | Date | string
  origin?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  destination?: Prisma.XOR<Prisma.WarehouseScalarRelationFilter, Prisma.WarehouseWhereInput>
  transporter?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  created_by?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  assets?: Prisma.AssetListRelationFilter
}

export type ArrivalOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  arrival_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  origin?: Prisma.OrganizationOrderByWithRelationInput
  destination?: Prisma.WarehouseOrderByWithRelationInput
  transporter?: Prisma.OrganizationOrderByWithRelationInput
  created_by?: Prisma.UserOrderByWithRelationInput
  assets?: Prisma.AssetOrderByRelationAggregateInput
}

export type ArrivalWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  arrival_number?: string
  AND?: Prisma.ArrivalWhereInput | Prisma.ArrivalWhereInput[]
  OR?: Prisma.ArrivalWhereInput[]
  NOT?: Prisma.ArrivalWhereInput | Prisma.ArrivalWhereInput[]
  origin_id?: Prisma.IntFilter<"Arrival"> | number
  destination_id?: Prisma.IntFilter<"Arrival"> | number
  transporter_id?: Prisma.IntFilter<"Arrival"> | number
  created_by_id?: Prisma.IntFilter<"Arrival"> | number
  notes?: Prisma.StringNullableFilter<"Arrival"> | string | null
  created_at?: Prisma.DateTimeFilter<"Arrival"> | Date | string
  origin?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  destination?: Prisma.XOR<Prisma.WarehouseScalarRelationFilter, Prisma.WarehouseWhereInput>
  transporter?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  created_by?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  assets?: Prisma.AssetListRelationFilter
}, "id" | "arrival_number">

export type ArrivalOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  arrival_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  _count?: Prisma.ArrivalCountOrderByAggregateInput
  _avg?: Prisma.ArrivalAvgOrderByAggregateInput
  _max?: Prisma.ArrivalMaxOrderByAggregateInput
  _min?: Prisma.ArrivalMinOrderByAggregateInput
  _sum?: Prisma.ArrivalSumOrderByAggregateInput
}

export type ArrivalScalarWhereWithAggregatesInput = {
  AND?: Prisma.ArrivalScalarWhereWithAggregatesInput | Prisma.ArrivalScalarWhereWithAggregatesInput[]
  OR?: Prisma.ArrivalScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ArrivalScalarWhereWithAggregatesInput | Prisma.ArrivalScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Arrival"> | number
  arrival_number?: Prisma.StringWithAggregatesFilter<"Arrival"> | string
  origin_id?: Prisma.IntWithAggregatesFilter<"Arrival"> | number
  destination_id?: Prisma.IntWithAggregatesFilter<"Arrival"> | number
  transporter_id?: Prisma.IntWithAggregatesFilter<"Arrival"> | number
  created_by_id?: Prisma.IntWithAggregatesFilter<"Arrival"> | number
  notes?: Prisma.StringNullableWithAggregatesFilter<"Arrival"> | string | null
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Arrival"> | Date | string
}

export type ArrivalCreateInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.OrganizationCreateNestedOneWithoutArrivals_originInput
  destination: Prisma.WarehouseCreateNestedOneWithoutArrivalsInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutArrivals_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutArrivalsInput
  assets?: Prisma.AssetCreateNestedManyWithoutArrivalInput
}

export type ArrivalUncheckedCreateInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutArrivalInput
}

export type ArrivalUpdateInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_originNestedInput
  destination?: Prisma.WarehouseUpdateOneRequiredWithoutArrivalsNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutArrivalsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutArrivalNestedInput
}

export type ArrivalCreateManyInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalUpdateManyMutationInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalNullableScalarRelationFilter = {
  is?: Prisma.ArrivalWhereInput | null
  isNot?: Prisma.ArrivalWhereInput | null
}

export type ArrivalCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  arrival_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type ArrivalAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
}

export type ArrivalMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  arrival_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type ArrivalMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  arrival_number?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type ArrivalSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  origin_id?: Prisma.SortOrder
  destination_id?: Prisma.SortOrder
  transporter_id?: Prisma.SortOrder
  created_by_id?: Prisma.SortOrder
}

export type ArrivalListRelationFilter = {
  every?: Prisma.ArrivalWhereInput
  some?: Prisma.ArrivalWhereInput
  none?: Prisma.ArrivalWhereInput
}

export type ArrivalOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ArrivalCreateNestedOneWithoutAssetsInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutAssetsInput, Prisma.ArrivalUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutAssetsInput
  connect?: Prisma.ArrivalWhereUniqueInput
}

export type ArrivalUpdateOneWithoutAssetsNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutAssetsInput, Prisma.ArrivalUncheckedCreateWithoutAssetsInput>
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutAssetsInput
  upsert?: Prisma.ArrivalUpsertWithoutAssetsInput
  disconnect?: Prisma.ArrivalWhereInput | boolean
  delete?: Prisma.ArrivalWhereInput | boolean
  connect?: Prisma.ArrivalWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ArrivalUpdateToOneWithWhereWithoutAssetsInput, Prisma.ArrivalUpdateWithoutAssetsInput>, Prisma.ArrivalUncheckedUpdateWithoutAssetsInput>
}

export type ArrivalCreateNestedManyWithoutDestinationInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput> | Prisma.ArrivalCreateWithoutDestinationInput[] | Prisma.ArrivalUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutDestinationInput | Prisma.ArrivalCreateOrConnectWithoutDestinationInput[]
  createMany?: Prisma.ArrivalCreateManyDestinationInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUncheckedCreateNestedManyWithoutDestinationInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput> | Prisma.ArrivalCreateWithoutDestinationInput[] | Prisma.ArrivalUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutDestinationInput | Prisma.ArrivalCreateOrConnectWithoutDestinationInput[]
  createMany?: Prisma.ArrivalCreateManyDestinationInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUpdateManyWithoutDestinationNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput> | Prisma.ArrivalCreateWithoutDestinationInput[] | Prisma.ArrivalUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutDestinationInput | Prisma.ArrivalCreateOrConnectWithoutDestinationInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutDestinationInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutDestinationInput[]
  createMany?: Prisma.ArrivalCreateManyDestinationInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutDestinationInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutDestinationInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutDestinationInput | Prisma.ArrivalUpdateManyWithWhereWithoutDestinationInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalUncheckedUpdateManyWithoutDestinationNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput> | Prisma.ArrivalCreateWithoutDestinationInput[] | Prisma.ArrivalUncheckedCreateWithoutDestinationInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutDestinationInput | Prisma.ArrivalCreateOrConnectWithoutDestinationInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutDestinationInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutDestinationInput[]
  createMany?: Prisma.ArrivalCreateManyDestinationInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutDestinationInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutDestinationInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutDestinationInput | Prisma.ArrivalUpdateManyWithWhereWithoutDestinationInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalCreateNestedManyWithoutCreated_byInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput> | Prisma.ArrivalCreateWithoutCreated_byInput[] | Prisma.ArrivalUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutCreated_byInput | Prisma.ArrivalCreateOrConnectWithoutCreated_byInput[]
  createMany?: Prisma.ArrivalCreateManyCreated_byInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUncheckedCreateNestedManyWithoutCreated_byInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput> | Prisma.ArrivalCreateWithoutCreated_byInput[] | Prisma.ArrivalUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutCreated_byInput | Prisma.ArrivalCreateOrConnectWithoutCreated_byInput[]
  createMany?: Prisma.ArrivalCreateManyCreated_byInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUpdateManyWithoutCreated_byNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput> | Prisma.ArrivalCreateWithoutCreated_byInput[] | Prisma.ArrivalUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutCreated_byInput | Prisma.ArrivalCreateOrConnectWithoutCreated_byInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutCreated_byInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutCreated_byInput[]
  createMany?: Prisma.ArrivalCreateManyCreated_byInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutCreated_byInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutCreated_byInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutCreated_byInput | Prisma.ArrivalUpdateManyWithWhereWithoutCreated_byInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalUncheckedUpdateManyWithoutCreated_byNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput> | Prisma.ArrivalCreateWithoutCreated_byInput[] | Prisma.ArrivalUncheckedCreateWithoutCreated_byInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutCreated_byInput | Prisma.ArrivalCreateOrConnectWithoutCreated_byInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutCreated_byInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutCreated_byInput[]
  createMany?: Prisma.ArrivalCreateManyCreated_byInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutCreated_byInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutCreated_byInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutCreated_byInput | Prisma.ArrivalUpdateManyWithWhereWithoutCreated_byInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalCreateNestedManyWithoutOriginInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput> | Prisma.ArrivalCreateWithoutOriginInput[] | Prisma.ArrivalUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutOriginInput | Prisma.ArrivalCreateOrConnectWithoutOriginInput[]
  createMany?: Prisma.ArrivalCreateManyOriginInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalCreateNestedManyWithoutTransporterInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput> | Prisma.ArrivalCreateWithoutTransporterInput[] | Prisma.ArrivalUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutTransporterInput | Prisma.ArrivalCreateOrConnectWithoutTransporterInput[]
  createMany?: Prisma.ArrivalCreateManyTransporterInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUncheckedCreateNestedManyWithoutOriginInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput> | Prisma.ArrivalCreateWithoutOriginInput[] | Prisma.ArrivalUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutOriginInput | Prisma.ArrivalCreateOrConnectWithoutOriginInput[]
  createMany?: Prisma.ArrivalCreateManyOriginInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUncheckedCreateNestedManyWithoutTransporterInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput> | Prisma.ArrivalCreateWithoutTransporterInput[] | Prisma.ArrivalUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutTransporterInput | Prisma.ArrivalCreateOrConnectWithoutTransporterInput[]
  createMany?: Prisma.ArrivalCreateManyTransporterInputEnvelope
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
}

export type ArrivalUpdateManyWithoutOriginNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput> | Prisma.ArrivalCreateWithoutOriginInput[] | Prisma.ArrivalUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutOriginInput | Prisma.ArrivalCreateOrConnectWithoutOriginInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutOriginInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutOriginInput[]
  createMany?: Prisma.ArrivalCreateManyOriginInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutOriginInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutOriginInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutOriginInput | Prisma.ArrivalUpdateManyWithWhereWithoutOriginInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalUpdateManyWithoutTransporterNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput> | Prisma.ArrivalCreateWithoutTransporterInput[] | Prisma.ArrivalUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutTransporterInput | Prisma.ArrivalCreateOrConnectWithoutTransporterInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutTransporterInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutTransporterInput[]
  createMany?: Prisma.ArrivalCreateManyTransporterInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutTransporterInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutTransporterInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutTransporterInput | Prisma.ArrivalUpdateManyWithWhereWithoutTransporterInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalUncheckedUpdateManyWithoutOriginNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput> | Prisma.ArrivalCreateWithoutOriginInput[] | Prisma.ArrivalUncheckedCreateWithoutOriginInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutOriginInput | Prisma.ArrivalCreateOrConnectWithoutOriginInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutOriginInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutOriginInput[]
  createMany?: Prisma.ArrivalCreateManyOriginInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutOriginInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutOriginInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutOriginInput | Prisma.ArrivalUpdateManyWithWhereWithoutOriginInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalUncheckedUpdateManyWithoutTransporterNestedInput = {
  create?: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput> | Prisma.ArrivalCreateWithoutTransporterInput[] | Prisma.ArrivalUncheckedCreateWithoutTransporterInput[]
  connectOrCreate?: Prisma.ArrivalCreateOrConnectWithoutTransporterInput | Prisma.ArrivalCreateOrConnectWithoutTransporterInput[]
  upsert?: Prisma.ArrivalUpsertWithWhereUniqueWithoutTransporterInput | Prisma.ArrivalUpsertWithWhereUniqueWithoutTransporterInput[]
  createMany?: Prisma.ArrivalCreateManyTransporterInputEnvelope
  set?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  disconnect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  delete?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  connect?: Prisma.ArrivalWhereUniqueInput | Prisma.ArrivalWhereUniqueInput[]
  update?: Prisma.ArrivalUpdateWithWhereUniqueWithoutTransporterInput | Prisma.ArrivalUpdateWithWhereUniqueWithoutTransporterInput[]
  updateMany?: Prisma.ArrivalUpdateManyWithWhereWithoutTransporterInput | Prisma.ArrivalUpdateManyWithWhereWithoutTransporterInput[]
  deleteMany?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
}

export type ArrivalCreateWithoutAssetsInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.OrganizationCreateNestedOneWithoutArrivals_originInput
  destination: Prisma.WarehouseCreateNestedOneWithoutArrivalsInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutArrivals_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutArrivalsInput
}

export type ArrivalUncheckedCreateWithoutAssetsInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalCreateOrConnectWithoutAssetsInput = {
  where: Prisma.ArrivalWhereUniqueInput
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutAssetsInput, Prisma.ArrivalUncheckedCreateWithoutAssetsInput>
}

export type ArrivalUpsertWithoutAssetsInput = {
  update: Prisma.XOR<Prisma.ArrivalUpdateWithoutAssetsInput, Prisma.ArrivalUncheckedUpdateWithoutAssetsInput>
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutAssetsInput, Prisma.ArrivalUncheckedCreateWithoutAssetsInput>
  where?: Prisma.ArrivalWhereInput
}

export type ArrivalUpdateToOneWithWhereWithoutAssetsInput = {
  where?: Prisma.ArrivalWhereInput
  data: Prisma.XOR<Prisma.ArrivalUpdateWithoutAssetsInput, Prisma.ArrivalUncheckedUpdateWithoutAssetsInput>
}

export type ArrivalUpdateWithoutAssetsInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_originNestedInput
  destination?: Prisma.WarehouseUpdateOneRequiredWithoutArrivalsNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutArrivalsNestedInput
}

export type ArrivalUncheckedUpdateWithoutAssetsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalCreateWithoutDestinationInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.OrganizationCreateNestedOneWithoutArrivals_originInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutArrivals_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutArrivalsInput
  assets?: Prisma.AssetCreateNestedManyWithoutArrivalInput
}

export type ArrivalUncheckedCreateWithoutDestinationInput = {
  id?: number
  arrival_number: string
  origin_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutArrivalInput
}

export type ArrivalCreateOrConnectWithoutDestinationInput = {
  where: Prisma.ArrivalWhereUniqueInput
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput>
}

export type ArrivalCreateManyDestinationInputEnvelope = {
  data: Prisma.ArrivalCreateManyDestinationInput | Prisma.ArrivalCreateManyDestinationInput[]
  skipDuplicates?: boolean
}

export type ArrivalUpsertWithWhereUniqueWithoutDestinationInput = {
  where: Prisma.ArrivalWhereUniqueInput
  update: Prisma.XOR<Prisma.ArrivalUpdateWithoutDestinationInput, Prisma.ArrivalUncheckedUpdateWithoutDestinationInput>
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutDestinationInput, Prisma.ArrivalUncheckedCreateWithoutDestinationInput>
}

export type ArrivalUpdateWithWhereUniqueWithoutDestinationInput = {
  where: Prisma.ArrivalWhereUniqueInput
  data: Prisma.XOR<Prisma.ArrivalUpdateWithoutDestinationInput, Prisma.ArrivalUncheckedUpdateWithoutDestinationInput>
}

export type ArrivalUpdateManyWithWhereWithoutDestinationInput = {
  where: Prisma.ArrivalScalarWhereInput
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyWithoutDestinationInput>
}

export type ArrivalScalarWhereInput = {
  AND?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
  OR?: Prisma.ArrivalScalarWhereInput[]
  NOT?: Prisma.ArrivalScalarWhereInput | Prisma.ArrivalScalarWhereInput[]
  id?: Prisma.IntFilter<"Arrival"> | number
  arrival_number?: Prisma.StringFilter<"Arrival"> | string
  origin_id?: Prisma.IntFilter<"Arrival"> | number
  destination_id?: Prisma.IntFilter<"Arrival"> | number
  transporter_id?: Prisma.IntFilter<"Arrival"> | number
  created_by_id?: Prisma.IntFilter<"Arrival"> | number
  notes?: Prisma.StringNullableFilter<"Arrival"> | string | null
  created_at?: Prisma.DateTimeFilter<"Arrival"> | Date | string
}

export type ArrivalCreateWithoutCreated_byInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.OrganizationCreateNestedOneWithoutArrivals_originInput
  destination: Prisma.WarehouseCreateNestedOneWithoutArrivalsInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutArrivals_transporterInput
  assets?: Prisma.AssetCreateNestedManyWithoutArrivalInput
}

export type ArrivalUncheckedCreateWithoutCreated_byInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutArrivalInput
}

export type ArrivalCreateOrConnectWithoutCreated_byInput = {
  where: Prisma.ArrivalWhereUniqueInput
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput>
}

export type ArrivalCreateManyCreated_byInputEnvelope = {
  data: Prisma.ArrivalCreateManyCreated_byInput | Prisma.ArrivalCreateManyCreated_byInput[]
  skipDuplicates?: boolean
}

export type ArrivalUpsertWithWhereUniqueWithoutCreated_byInput = {
  where: Prisma.ArrivalWhereUniqueInput
  update: Prisma.XOR<Prisma.ArrivalUpdateWithoutCreated_byInput, Prisma.ArrivalUncheckedUpdateWithoutCreated_byInput>
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutCreated_byInput, Prisma.ArrivalUncheckedCreateWithoutCreated_byInput>
}

export type ArrivalUpdateWithWhereUniqueWithoutCreated_byInput = {
  where: Prisma.ArrivalWhereUniqueInput
  data: Prisma.XOR<Prisma.ArrivalUpdateWithoutCreated_byInput, Prisma.ArrivalUncheckedUpdateWithoutCreated_byInput>
}

export type ArrivalUpdateManyWithWhereWithoutCreated_byInput = {
  where: Prisma.ArrivalScalarWhereInput
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyWithoutCreated_byInput>
}

export type ArrivalCreateWithoutOriginInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  destination: Prisma.WarehouseCreateNestedOneWithoutArrivalsInput
  transporter: Prisma.OrganizationCreateNestedOneWithoutArrivals_transporterInput
  created_by: Prisma.UserCreateNestedOneWithoutArrivalsInput
  assets?: Prisma.AssetCreateNestedManyWithoutArrivalInput
}

export type ArrivalUncheckedCreateWithoutOriginInput = {
  id?: number
  arrival_number: string
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutArrivalInput
}

export type ArrivalCreateOrConnectWithoutOriginInput = {
  where: Prisma.ArrivalWhereUniqueInput
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput>
}

export type ArrivalCreateManyOriginInputEnvelope = {
  data: Prisma.ArrivalCreateManyOriginInput | Prisma.ArrivalCreateManyOriginInput[]
  skipDuplicates?: boolean
}

export type ArrivalCreateWithoutTransporterInput = {
  arrival_number: string
  notes?: string | null
  created_at: Date | string
  origin: Prisma.OrganizationCreateNestedOneWithoutArrivals_originInput
  destination: Prisma.WarehouseCreateNestedOneWithoutArrivalsInput
  created_by: Prisma.UserCreateNestedOneWithoutArrivalsInput
  assets?: Prisma.AssetCreateNestedManyWithoutArrivalInput
}

export type ArrivalUncheckedCreateWithoutTransporterInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
  assets?: Prisma.AssetUncheckedCreateNestedManyWithoutArrivalInput
}

export type ArrivalCreateOrConnectWithoutTransporterInput = {
  where: Prisma.ArrivalWhereUniqueInput
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput>
}

export type ArrivalCreateManyTransporterInputEnvelope = {
  data: Prisma.ArrivalCreateManyTransporterInput | Prisma.ArrivalCreateManyTransporterInput[]
  skipDuplicates?: boolean
}

export type ArrivalUpsertWithWhereUniqueWithoutOriginInput = {
  where: Prisma.ArrivalWhereUniqueInput
  update: Prisma.XOR<Prisma.ArrivalUpdateWithoutOriginInput, Prisma.ArrivalUncheckedUpdateWithoutOriginInput>
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutOriginInput, Prisma.ArrivalUncheckedCreateWithoutOriginInput>
}

export type ArrivalUpdateWithWhereUniqueWithoutOriginInput = {
  where: Prisma.ArrivalWhereUniqueInput
  data: Prisma.XOR<Prisma.ArrivalUpdateWithoutOriginInput, Prisma.ArrivalUncheckedUpdateWithoutOriginInput>
}

export type ArrivalUpdateManyWithWhereWithoutOriginInput = {
  where: Prisma.ArrivalScalarWhereInput
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyWithoutOriginInput>
}

export type ArrivalUpsertWithWhereUniqueWithoutTransporterInput = {
  where: Prisma.ArrivalWhereUniqueInput
  update: Prisma.XOR<Prisma.ArrivalUpdateWithoutTransporterInput, Prisma.ArrivalUncheckedUpdateWithoutTransporterInput>
  create: Prisma.XOR<Prisma.ArrivalCreateWithoutTransporterInput, Prisma.ArrivalUncheckedCreateWithoutTransporterInput>
}

export type ArrivalUpdateWithWhereUniqueWithoutTransporterInput = {
  where: Prisma.ArrivalWhereUniqueInput
  data: Prisma.XOR<Prisma.ArrivalUpdateWithoutTransporterInput, Prisma.ArrivalUncheckedUpdateWithoutTransporterInput>
}

export type ArrivalUpdateManyWithWhereWithoutTransporterInput = {
  where: Prisma.ArrivalScalarWhereInput
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyWithoutTransporterInput>
}

export type ArrivalCreateManyDestinationInput = {
  id?: number
  arrival_number: string
  origin_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalUpdateWithoutDestinationInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_originNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutArrivalsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateWithoutDestinationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateManyWithoutDestinationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalCreateManyCreated_byInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  transporter_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalUpdateWithoutCreated_byInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_originNestedInput
  destination?: Prisma.WarehouseUpdateOneRequiredWithoutArrivalsNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_transporterNestedInput
  assets?: Prisma.AssetUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateWithoutCreated_byInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateManyWithoutCreated_byInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalCreateManyOriginInput = {
  id?: number
  arrival_number: string
  destination_id: number
  transporter_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalCreateManyTransporterInput = {
  id?: number
  arrival_number: string
  origin_id: number
  destination_id: number
  created_by_id: number
  notes?: string | null
  created_at: Date | string
}

export type ArrivalUpdateWithoutOriginInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  destination?: Prisma.WarehouseUpdateOneRequiredWithoutArrivalsNestedInput
  transporter?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_transporterNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutArrivalsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateWithoutOriginInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateManyWithoutOriginInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  transporter_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ArrivalUpdateWithoutTransporterInput = {
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  origin?: Prisma.OrganizationUpdateOneRequiredWithoutArrivals_originNestedInput
  destination?: Prisma.WarehouseUpdateOneRequiredWithoutArrivalsNestedInput
  created_by?: Prisma.UserUpdateOneRequiredWithoutArrivalsNestedInput
  assets?: Prisma.AssetUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateWithoutTransporterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  assets?: Prisma.AssetUncheckedUpdateManyWithoutArrivalNestedInput
}

export type ArrivalUncheckedUpdateManyWithoutTransporterInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  arrival_number?: Prisma.StringFieldUpdateOperationsInput | string
  origin_id?: Prisma.IntFieldUpdateOperationsInput | number
  destination_id?: Prisma.IntFieldUpdateOperationsInput | number
  created_by_id?: Prisma.IntFieldUpdateOperationsInput | number
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ArrivalCountOutputType
 */

export type ArrivalCountOutputType = {
  assets: number
}

export type ArrivalCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  assets?: boolean | ArrivalCountOutputTypeCountAssetsArgs
}

/**
 * ArrivalCountOutputType without action
 */
export type ArrivalCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArrivalCountOutputType
   */
  select?: Prisma.ArrivalCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ArrivalCountOutputType without action
 */
export type ArrivalCountOutputTypeCountAssetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AssetWhereInput
}


export type ArrivalSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  arrival_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  assets?: boolean | Prisma.Arrival$assetsArgs<ExtArgs>
  _count?: boolean | Prisma.ArrivalCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["arrival"]>

export type ArrivalSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  arrival_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["arrival"]>

export type ArrivalSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  arrival_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  notes?: boolean
  created_at?: boolean
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["arrival"]>

export type ArrivalSelectScalar = {
  id?: boolean
  arrival_number?: boolean
  origin_id?: boolean
  destination_id?: boolean
  transporter_id?: boolean
  created_by_id?: boolean
  notes?: boolean
  created_at?: boolean
}

export type ArrivalOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "arrival_number" | "origin_id" | "destination_id" | "transporter_id" | "created_by_id" | "notes" | "created_at", ExtArgs["result"]["arrival"]>
export type ArrivalInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  assets?: boolean | Prisma.Arrival$assetsArgs<ExtArgs>
  _count?: boolean | Prisma.ArrivalCountOutputTypeDefaultArgs<ExtArgs>
}
export type ArrivalIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type ArrivalIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  origin?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  destination?: boolean | Prisma.WarehouseDefaultArgs<ExtArgs>
  transporter?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  created_by?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $ArrivalPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Arrival"
  objects: {
    origin: Prisma.$OrganizationPayload<ExtArgs>
    destination: Prisma.$WarehousePayload<ExtArgs>
    transporter: Prisma.$OrganizationPayload<ExtArgs>
    created_by: Prisma.$UserPayload<ExtArgs>
    assets: Prisma.$AssetPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    arrival_number: string
    origin_id: number
    destination_id: number
    transporter_id: number
    created_by_id: number
    notes: string | null
    created_at: Date
  }, ExtArgs["result"]["arrival"]>
  composites: {}
}

export type ArrivalGetPayload<S extends boolean | null | undefined | ArrivalDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ArrivalPayload, S>

export type ArrivalCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ArrivalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ArrivalCountAggregateInputType | true
  }

export interface ArrivalDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Arrival'], meta: { name: 'Arrival' } }
  /**
   * Find zero or one Arrival that matches the filter.
   * @param {ArrivalFindUniqueArgs} args - Arguments to find a Arrival
   * @example
   * // Get one Arrival
   * const arrival = await prisma.arrival.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ArrivalFindUniqueArgs>(args: Prisma.SelectSubset<T, ArrivalFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Arrival that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ArrivalFindUniqueOrThrowArgs} args - Arguments to find a Arrival
   * @example
   * // Get one Arrival
   * const arrival = await prisma.arrival.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ArrivalFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ArrivalFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Arrival that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalFindFirstArgs} args - Arguments to find a Arrival
   * @example
   * // Get one Arrival
   * const arrival = await prisma.arrival.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ArrivalFindFirstArgs>(args?: Prisma.SelectSubset<T, ArrivalFindFirstArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Arrival that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalFindFirstOrThrowArgs} args - Arguments to find a Arrival
   * @example
   * // Get one Arrival
   * const arrival = await prisma.arrival.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ArrivalFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ArrivalFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Arrivals that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Arrivals
   * const arrivals = await prisma.arrival.findMany()
   * 
   * // Get first 10 Arrivals
   * const arrivals = await prisma.arrival.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const arrivalWithIdOnly = await prisma.arrival.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ArrivalFindManyArgs>(args?: Prisma.SelectSubset<T, ArrivalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Arrival.
   * @param {ArrivalCreateArgs} args - Arguments to create a Arrival.
   * @example
   * // Create one Arrival
   * const Arrival = await prisma.arrival.create({
   *   data: {
   *     // ... data to create a Arrival
   *   }
   * })
   * 
   */
  create<T extends ArrivalCreateArgs>(args: Prisma.SelectSubset<T, ArrivalCreateArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Arrivals.
   * @param {ArrivalCreateManyArgs} args - Arguments to create many Arrivals.
   * @example
   * // Create many Arrivals
   * const arrival = await prisma.arrival.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ArrivalCreateManyArgs>(args?: Prisma.SelectSubset<T, ArrivalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Arrivals and returns the data saved in the database.
   * @param {ArrivalCreateManyAndReturnArgs} args - Arguments to create many Arrivals.
   * @example
   * // Create many Arrivals
   * const arrival = await prisma.arrival.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Arrivals and only return the `id`
   * const arrivalWithIdOnly = await prisma.arrival.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ArrivalCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ArrivalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Arrival.
   * @param {ArrivalDeleteArgs} args - Arguments to delete one Arrival.
   * @example
   * // Delete one Arrival
   * const Arrival = await prisma.arrival.delete({
   *   where: {
   *     // ... filter to delete one Arrival
   *   }
   * })
   * 
   */
  delete<T extends ArrivalDeleteArgs>(args: Prisma.SelectSubset<T, ArrivalDeleteArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Arrival.
   * @param {ArrivalUpdateArgs} args - Arguments to update one Arrival.
   * @example
   * // Update one Arrival
   * const arrival = await prisma.arrival.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ArrivalUpdateArgs>(args: Prisma.SelectSubset<T, ArrivalUpdateArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Arrivals.
   * @param {ArrivalDeleteManyArgs} args - Arguments to filter Arrivals to delete.
   * @example
   * // Delete a few Arrivals
   * const { count } = await prisma.arrival.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ArrivalDeleteManyArgs>(args?: Prisma.SelectSubset<T, ArrivalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Arrivals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Arrivals
   * const arrival = await prisma.arrival.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ArrivalUpdateManyArgs>(args: Prisma.SelectSubset<T, ArrivalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Arrivals and returns the data updated in the database.
   * @param {ArrivalUpdateManyAndReturnArgs} args - Arguments to update many Arrivals.
   * @example
   * // Update many Arrivals
   * const arrival = await prisma.arrival.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Arrivals and only return the `id`
   * const arrivalWithIdOnly = await prisma.arrival.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ArrivalUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ArrivalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Arrival.
   * @param {ArrivalUpsertArgs} args - Arguments to update or create a Arrival.
   * @example
   * // Update or create a Arrival
   * const arrival = await prisma.arrival.upsert({
   *   create: {
   *     // ... data to create a Arrival
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Arrival we want to update
   *   }
   * })
   */
  upsert<T extends ArrivalUpsertArgs>(args: Prisma.SelectSubset<T, ArrivalUpsertArgs<ExtArgs>>): Prisma.Prisma__ArrivalClient<runtime.Types.Result.GetResult<Prisma.$ArrivalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Arrivals.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalCountArgs} args - Arguments to filter Arrivals to count.
   * @example
   * // Count the number of Arrivals
   * const count = await prisma.arrival.count({
   *   where: {
   *     // ... the filter for the Arrivals we want to count
   *   }
   * })
  **/
  count<T extends ArrivalCountArgs>(
    args?: Prisma.Subset<T, ArrivalCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ArrivalCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Arrival.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ArrivalAggregateArgs>(args: Prisma.Subset<T, ArrivalAggregateArgs>): Prisma.PrismaPromise<GetArrivalAggregateType<T>>

  /**
   * Group by Arrival.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArrivalGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ArrivalGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ArrivalGroupByArgs['orderBy'] }
      : { orderBy?: ArrivalGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ArrivalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArrivalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Arrival model
 */
readonly fields: ArrivalFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Arrival.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ArrivalClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  origin<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  destination<T extends Prisma.WarehouseDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WarehouseDefaultArgs<ExtArgs>>): Prisma.Prisma__WarehouseClient<runtime.Types.Result.GetResult<Prisma.$WarehousePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  transporter<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  created_by<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  assets<T extends Prisma.Arrival$assetsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Arrival$assetsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Arrival model
 */
export interface ArrivalFieldRefs {
  readonly id: Prisma.FieldRef<"Arrival", 'Int'>
  readonly arrival_number: Prisma.FieldRef<"Arrival", 'String'>
  readonly origin_id: Prisma.FieldRef<"Arrival", 'Int'>
  readonly destination_id: Prisma.FieldRef<"Arrival", 'Int'>
  readonly transporter_id: Prisma.FieldRef<"Arrival", 'Int'>
  readonly created_by_id: Prisma.FieldRef<"Arrival", 'Int'>
  readonly notes: Prisma.FieldRef<"Arrival", 'String'>
  readonly created_at: Prisma.FieldRef<"Arrival", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Arrival findUnique
 */
export type ArrivalFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter, which Arrival to fetch.
   */
  where: Prisma.ArrivalWhereUniqueInput
}

/**
 * Arrival findUniqueOrThrow
 */
export type ArrivalFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter, which Arrival to fetch.
   */
  where: Prisma.ArrivalWhereUniqueInput
}

/**
 * Arrival findFirst
 */
export type ArrivalFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter, which Arrival to fetch.
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Arrivals to fetch.
   */
  orderBy?: Prisma.ArrivalOrderByWithRelationInput | Prisma.ArrivalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Arrivals.
   */
  cursor?: Prisma.ArrivalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Arrivals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Arrivals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Arrivals.
   */
  distinct?: Prisma.ArrivalScalarFieldEnum | Prisma.ArrivalScalarFieldEnum[]
}

/**
 * Arrival findFirstOrThrow
 */
export type ArrivalFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter, which Arrival to fetch.
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Arrivals to fetch.
   */
  orderBy?: Prisma.ArrivalOrderByWithRelationInput | Prisma.ArrivalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Arrivals.
   */
  cursor?: Prisma.ArrivalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Arrivals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Arrivals.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Arrivals.
   */
  distinct?: Prisma.ArrivalScalarFieldEnum | Prisma.ArrivalScalarFieldEnum[]
}

/**
 * Arrival findMany
 */
export type ArrivalFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter, which Arrivals to fetch.
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Arrivals to fetch.
   */
  orderBy?: Prisma.ArrivalOrderByWithRelationInput | Prisma.ArrivalOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Arrivals.
   */
  cursor?: Prisma.ArrivalWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Arrivals from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Arrivals.
   */
  skip?: number
  distinct?: Prisma.ArrivalScalarFieldEnum | Prisma.ArrivalScalarFieldEnum[]
}

/**
 * Arrival create
 */
export type ArrivalCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * The data needed to create a Arrival.
   */
  data: Prisma.XOR<Prisma.ArrivalCreateInput, Prisma.ArrivalUncheckedCreateInput>
}

/**
 * Arrival createMany
 */
export type ArrivalCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Arrivals.
   */
  data: Prisma.ArrivalCreateManyInput | Prisma.ArrivalCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Arrival createManyAndReturn
 */
export type ArrivalCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * The data used to create many Arrivals.
   */
  data: Prisma.ArrivalCreateManyInput | Prisma.ArrivalCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Arrival update
 */
export type ArrivalUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * The data needed to update a Arrival.
   */
  data: Prisma.XOR<Prisma.ArrivalUpdateInput, Prisma.ArrivalUncheckedUpdateInput>
  /**
   * Choose, which Arrival to update.
   */
  where: Prisma.ArrivalWhereUniqueInput
}

/**
 * Arrival updateMany
 */
export type ArrivalUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Arrivals.
   */
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyInput>
  /**
   * Filter which Arrivals to update
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * Limit how many Arrivals to update.
   */
  limit?: number
}

/**
 * Arrival updateManyAndReturn
 */
export type ArrivalUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * The data used to update Arrivals.
   */
  data: Prisma.XOR<Prisma.ArrivalUpdateManyMutationInput, Prisma.ArrivalUncheckedUpdateManyInput>
  /**
   * Filter which Arrivals to update
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * Limit how many Arrivals to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Arrival upsert
 */
export type ArrivalUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * The filter to search for the Arrival to update in case it exists.
   */
  where: Prisma.ArrivalWhereUniqueInput
  /**
   * In case the Arrival found by the `where` argument doesn't exist, create a new Arrival with this data.
   */
  create: Prisma.XOR<Prisma.ArrivalCreateInput, Prisma.ArrivalUncheckedCreateInput>
  /**
   * In case the Arrival was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ArrivalUpdateInput, Prisma.ArrivalUncheckedUpdateInput>
}

/**
 * Arrival delete
 */
export type ArrivalDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
  /**
   * Filter which Arrival to delete.
   */
  where: Prisma.ArrivalWhereUniqueInput
}

/**
 * Arrival deleteMany
 */
export type ArrivalDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Arrivals to delete
   */
  where?: Prisma.ArrivalWhereInput
  /**
   * Limit how many Arrivals to delete.
   */
  limit?: number
}

/**
 * Arrival.assets
 */
export type Arrival$assetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Asset
   */
  select?: Prisma.AssetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Asset
   */
  omit?: Prisma.AssetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AssetInclude<ExtArgs> | null
  where?: Prisma.AssetWhereInput
  orderBy?: Prisma.AssetOrderByWithRelationInput | Prisma.AssetOrderByWithRelationInput[]
  cursor?: Prisma.AssetWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AssetScalarFieldEnum | Prisma.AssetScalarFieldEnum[]
}

/**
 * Arrival without action
 */
export type ArrivalDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Arrival
   */
  select?: Prisma.ArrivalSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Arrival
   */
  omit?: Prisma.ArrivalOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArrivalInclude<ExtArgs> | null
}
